apiVersion: v1
kind: Secret
metadata:
  name: aperag-env
  labels:
    {{- include "aperag.labels" . | nindent 4 }}
type: Opaque
stringData:
  .env: |
    # Auth
    JWT_SECRET={{ .Values.api.env.JWT_SECRET }}
    AUTH_TYPE={{ .Values.api.env.AUTH_TYPE }}
    OAUTH_REDIRECT_URL={{ .Values.api.env.OAUTH_REDIRECT_URL }}
    GOOGLE_OAUTH_CLIENT_ID={{ .Values.api.env.GOOGLE_OAUTH_CLIENT_ID }}
    GOOGLE_OAUTH_CLIENT_SECRET={{ .Values.api.env.GOOGLE_OAUTH_CLIENT_SECRET }}
    GITHUB_OAUTH_CLIENT_ID={{ .Values.api.env.GITHUB_OAUTH_CLIENT_ID }}
    GITHUB_OAUTH_CLIENT_SECRET={{ .Values.api.env.GITHUB_OAUTH_CLIENT_SECRET }}
    AUTH0_DOMAIN={{ .Values.api.env.AUTH0_DOMAIN }}
    AUTH0_CLIENT_ID={{ .Values.api.env.AUTH0_CLIENT_ID }}
    AUTHING_DOMAIN={{ .Values.api.env.AUTHING_DOMAIN }}
    AUTHING_APP_ID={{ .Values.api.env.AUTHING_APP_ID }}
    LOGTO_DOMAIN={{ .Values.api.env.LOGTO_DOMAIN }}
    LOGTO_APP_ID={{ .Values.api.env.LOGTO_APP_ID }}

    # Celery
    CELERY_FLOWER_USER={{ .Values.flower.env.CELERY_FLOWER_USER }}
    CELERY_FLOWER_PASSWORD={{ .Values.flower.env.CELERY_FLOWER_PASSWORD }}

    # Vector DB
    VECTOR_DB_TYPE={{ .Values.api.env.VECTOR_DB_TYPE }}
    VECTOR_DB_CONTEXT={{ .Values.api.env.VECTOR_DB_CONTEXT }}

    # Object Store
    OBJECT_STORE_TYPE={{ .Values.api.env.OBJECT_STORE_TYPE }}
    {{- if eq .Values.api.env.OBJECT_STORE_TYPE "local" }}
    OBJECT_STORE_LOCAL_ROOT_DIR={{ .Values.api.env.OBJECT_STORE_LOCAL_ROOT_DIR }}
    {{- end }}
    {{- if eq .Values.api.env.OBJECT_STORE_TYPE "s3" }}
    OBJECT_STORE_S3_ENDPOINT={{ .Values.api.env.OBJECT_STORE_S3_ENDPOINT }}
    OBJECT_STORE_S3_REGION={{ .Values.api.env.OBJECT_STORE_S3_REGION }}
    OBJECT_STORE_S3_ACCESS_KEY={{ .Values.api.env.OBJECT_STORE_S3_ACCESS_KEY }}
    OBJECT_STORE_S3_SECRET_KEY={{ .Values.api.env.OBJECT_STORE_S3_SECRET_KEY }}
    OBJECT_STORE_S3_BUCKET={{ .Values.api.env.OBJECT_STORE_S3_BUCKET }}
    OBJECT_STORE_S3_PREFIX_PATH={{ .Values.api.env.OBJECT_STORE_S3_PREFIX_PATH }}
    OBJECT_STORE_S3_USE_PATH_STYLE={{ .Values.api.env.OBJECT_STORE_S3_USE_PATH_STYLE }}
    {{- end }}

    # doc-ray
    DOCRAY_HOST={{ include "aperag.docrayEndpoint" . }}

    DEBUG={{ .Values.api.env.DEBUG }}

    MAX_BOT_COUNT={{ .Values.api.env.MAX_BOT_COUNT }}
    MAX_COLLECTION_COUNT={{ .Values.api.env.MAX_COLLECTION_COUNT }}
    MAX_DOCUMENT_COUNT={{ .Values.api.env.MAX_DOCUMENT_COUNT }}
    MAX_CONVERSATION_COUNT={{ .Values.api.env.MAX_CONVERSATION_COUNT }}

    EMBEDDING_MAX_CHUNKS_IN_BATCH={{ .Values.api.env.EMBEDDING_MAX_CHUNKS_IN_BATCH }}

    # Chunking
    CHUNK_SIZE={{ .Values.api.env.CHUNK_SIZE }}
    CHUNK_OVERLAP_SIZE={{ .Values.api.env.CHUNK_OVERLAP_SIZE }}

    TIKTOKEN_CACHE_DIR={{ .Values.api.env.TIKTOKEN_CACHE_DIR }}
    DEFAULT_ENCODING_MODEL={{ .Values.api.env.DEFAULT_ENCODING_MODEL }}
    TOKENIZERS_PARALLELISM={{ .Values.api.env.TOKENIZERS_PARALLELISM }}

    # LightRAG
    GRAPH_INDEX_KV_STORAGE={{ .Values.api.env.GRAPH_INDEX_KV_STORAGE }}
    GRAPH_INDEX_VECTOR_STORAGE={{ .Values.api.env.GRAPH_INDEX_VECTOR_STORAGE }}
    GRAPH_INDEX_GRAPH_STORAGE={{ .Values.api.env.GRAPH_INDEX_GRAPH_STORAGE }}

    # Cache
    CACHE_ENABLED={{ .Values.api.env.CACHE_ENABLED }}
    CACHE_TTL={{ .Values.api.env.CACHE_TTL }}

    # NebulaGraph
    {{- if .Values.nebula.enabled }}
    NEBULA_HOST={{ .Values.nebula.NEBULA_HOST }}
    NEBULA_PORT={{ .Values.nebula.NEBULA_PORT }}
    NEBULA_USER={{ .Values.nebula.NEBULA_USER }}
    NEBULA_PASSWORD={{ .Values.nebula.NEBULA_PASSWORD }}
    NEBULA_MAX_CONNECTION_POOL_SIZE={{ .Values.nebula.NEBULA_MAX_CONNECTION_POOL_SIZE }}
    NEBULA_TIMEOUT={{ .Values.nebula.NEBULA_TIMEOUT }}

    # LLM Keyword Extraction
    LLM_KEYWORD_EXTRACTION_PROVIDER={{ .Values.api.env.LLM_KEYWORD_EXTRACTION_PROVIDER }}
    LLM_KEYWORD_EXTRACTION_MODEL={{ .Values.api.env.LLM_KEYWORD_EXTRACTION_MODEL }}
    {{- end }}
