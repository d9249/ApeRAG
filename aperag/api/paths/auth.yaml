invite:
  post:
    summary: Create an invitation
    description: Create a new invitation for a user to register
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/auth.yaml#/invitationCreate'
    responses:
      '200':
        description: Invitation created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/invitation'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

invitations:
  get:
    summary: Get all invitations
    description: Get all invitations
    responses:
      '200':
        description: Invitations fetched successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/invitationList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

register:
  post:
    summary: Register a new user
    description: Register a new user with an invitation token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/auth.yaml#/register'
    responses:
      '200':
        description: User created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/user'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

login:
  post:
    summary: Login a user
    description: Login a user with username and password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/auth.yaml#/login'
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/user'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

logout:
  post:
    summary: Logout a user
    description: Logout a user
    responses:
      '200':
        description: Logout successful

users:
  get:
    summary: Get all users 
    description: Get all users
    responses:
      '200':
        description: Users fetched successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/userList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

changePassword:
  post:
    summary: Change user password
    description: Change user password
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/auth.yaml#/changePassword'
    responses:
      '200':
        description: Password changed successfully


deleteUser:
  delete:
    summary: Delete a user
    description: Delete a user
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: User deleted successfully

user:
  get:
    summary: Get user info
    description: Get user info
    responses:
      '200':
        description: User info
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/user'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

departments:
  get:
    summary: Get department organization structure
    description: Get department organization structure information
    parameters:
      - name: tenant_id
        in: query
        required: false
        schema:
          type: string
        description: Optional tenant ID to filter departments
      - name: hierarchical
        in: query
        required: false
        schema:
          type: boolean
          default: true
        description: If true, returns departments in hierarchical structure with children
    responses:
      '200':
        description: Departments fetched successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/auth.yaml#/departmentList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
