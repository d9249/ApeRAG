bots:
  get:
    summary: List bots
    description: Get a list of bots
    security:
      - BearerAuth: []
    parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        schema:
          type: integer
          default: 10
    responses:
      '200':
        description: List of bots
        content:
          application/json:
            schema:
              $ref: '../components/schemas/bot.yaml#/botList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Create a new bot
    description: Create a new bot
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/bot.yaml#/botCreate'
    responses:
      '200':
        description: Bot created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/bot.yaml#/bot'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
  
bot:
  get:
    summary: Get bot details
    description: Get details of a specific bot
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Bot details
        content:
          application/json:
            schema:
              $ref: '../components/schemas/bot.yaml#/bot'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Bot not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
  delete:
    summary: Delete a bot
    description: Delete a bot (idempotent operation)
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Bot deleted successfully (or already deleted)

  put:
    summary: Update a bot
    description: Update a bot
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/bot.yaml#/botUpdate'
    responses:
      '200':
        description: Bot updated successfully

debugFlow:
  post:
    summary: Debug a flow
    description: Debug a flow
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/bot.yaml#/debugFlowRequest'
    responses:
      '200':
        description: Flow debugged successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

botSharing:
  get:
    summary: Get bot sharing status
    description: Get the sharing status of a bot (owner only)
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Bot sharing status
        content:
          application/json:
            schema:
              $ref: '../components/schemas/marketplace.yaml#/SharingStatusResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '403':
        description: Permission denied
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Bot not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Publish bot to marketplace
    description: Publish bot to marketplace (owner only)
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Bot published successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '403':
        description: Permission denied
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Bot not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  delete:
    summary: Unpublish bot from marketplace
    description: Remove bot from marketplace (owner only)
    security:
      - BearerAuth: []
    parameters:
      - name: bot_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Bot unpublished successfully
      '400':
        description: Bot is not published to marketplace
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '403':
        description: Permission denied
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Bot not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
